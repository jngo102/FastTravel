<!-- Credit to SFGrenade https://github.com/SFGrenade -->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <RootNamespace>FastTravel</RootNamespace>
    <AssemblyName>FastTravel</AssemblyName>
    <TargetFramework>net472</TargetFramework>
    <AssemblyTitle>FastTravel</AssemblyTitle>
    <Product>FastTravel</Product>
    <Description>Teleport anywhere within Hallownest by clicking on the map.</Description>
    <Copyright>Copyright © </Copyright>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <FileVersion>1.0.0.0</FileVersion>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <!-- Path to DLL references required to build mod -->
    <LocalRefs>$(MSBuildProgramFiles32)/Steam/steamapps/common/Hollow Knight/hollow_knight_Data/Managed</LocalRefs>
    <!-- Path to Mods folder -->
    <ModsPath>$(LocalRefs)/Mods</ModsPath>
    <!-- The folder that exports will be generated in -->
    <ExportDir>Output</ExportDir>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <!-- Path to DLL references required to build mod -->
    <LocalRefs>References</LocalRefs>
    <!-- The folder that exports will be generated in -->
    <ExportDir>Output</ExportDir>
  </PropertyGroup>
  <Target Condition="'$(Configuration)' == 'Release'" Name="PackageMod" AfterTargets="PostBuildEvent">
    <RemoveDir Condition="Exists('$(ExportDir)')" Directories="$(ExportDir)" />
    <MakeDir Directories="$(ExportDir)" />
    <MakeDir Directories="$(ExportDir)/zip" />
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(ExportDir)" />
    <Copy Condition="'$(DocumentationFile)' != ''" SourceFiles="ReadMe.md;$(TargetPath);$(TargetDir)/$(TargetName).pdb;$(TargetDir)/$(TargetName).xml" DestinationFolder="$(ExportDir)/zip" />
    <Copy Condition="'$(DocumentationFile)' == ''" SourceFiles="ReadMe.md;$(TargetPath);$(TargetDir)/$(TargetName).pdb" DestinationFolder="$(ExportDir)/zip/" />
    <ZipDirectory SourceDirectory="$(ExportDir)/zip" DestinationFile="$(ExportDir)/$(TargetName).zip" />
    <RemoveDir Directories="$(ExportDir)/zip" />
    <PropertyGroup>
      <OutputFileString>$(AssemblyVersion)</OutputFileString>
    </PropertyGroup>
    <WriteLinesToFile File="Version.txt" Lines="$(OutputFileString)" Overwrite="true" Encoding="UTF-8" />
  </Target>
  <Target Condition="'$(Configuration)' == 'Debug'" Name="CopyMod" AfterTargets="PostBuildEvent">
    <RemoveDir Condition="Exists('$(ModsPath)/$(TargetName)')" Directories="$(ModsPath)/$(TargetName)" />
    <MakeDir Directories="$(ModsPath)/$(TargetName)" />
    <Copy SourceFiles="$(TargetPath);$(TargetDir)/$(TargetName).pdb" DestinationFolder="$(ModsPath)/$(TargetName)" />
    <!-- Uncomment this if you have the game installed on Steam, Steam is in your PATH environment variable, and you want to run the game upon build. -->
    <Exec Command="steam steam://rungameid/367520" />
  </Target>
  <ItemGroup>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(LocalRefs)/Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="MMHOOK_Assembly-CSharp">
      <HintPath>$(LocalRefs)/MMHOOK_Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="MMHOOK_PlayMaker">
      <HintPath>$(LocalRefs)/MMHOOK_PlayMaker.dll</HintPath>
    </Reference>
    <Reference Include="MonoMod.Utils">
      <HintPath>$(LocalRefs)/MonoMod.Utils.dll</HintPath>
    </Reference>
    <Reference Include="PlayMaker">
      <HintPath>$(LocalRefs)/PlayMaker.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(LocalRefs)/UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(LocalRefs)/UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(LocalRefs)/UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.Physics2DModule">
      <HintPath>$(LocalRefs)/UnityEngine.Physics2DModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(LocalRefs)/UnityEngine.UI.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <None Include=".gitignore" />
    <None Include="ReadMe.md" />
  </ItemGroup>
</Project>